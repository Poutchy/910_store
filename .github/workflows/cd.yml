name: CD

on:
  push:
    branches:
      - main

jobs:
  docker-build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Create temporary .env.prod
        run: |
          cat <<EOF > .env.prod
          RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}
          GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}
          EOF

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Rails app Docker image
        run: |
          docker compose --env-file .env.prod build rails-app

      - name: Push Docker image to Docker Hub
        run: |
          docker push gnachy/railshop:latest

      - name: Generate kubeconfig from secrets
        run: |
          cat <<EOF > kubeconfig.yml
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: ${{ secrets.CERTIFICATE_AUTHORITY_DATA }}
              server: ${{ secrets.SERVER }}
            name: ${{ secrets.CONTEXT_CLUSTER }}
          contexts:
          - context:
              cluster: ${{ secrets.CONTEXT_CLUSTER }}
              user: ${{ secrets.CONTEXT_USER }}
            name: ${{ secrets.CURRENT_CONTEXT }}
          current-context: ${{ secrets.CURRENT_CONTEXT }}
          kind: Config
          preferences: {}
          users:
          - name: ${{ secrets.CONTEXT_USER }}
            user:
              client-certificate-data: ${{ secrets.CLIENT_CERTIFICATE_DATA }}
              client-key-data: ${{ secrets.CLIENT_KEY_DATA }}
          EOF
          export KUBECONFIG=$PWD/kubeconfig.yml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/

      - name: Cleanup temporary files
        run: |
          rm -f .env.prod kubeconfig.yml
